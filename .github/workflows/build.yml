name: Userspace Build
on: [push, workflow_dispatch]

jobs:
  build:
    name: Userspace build
    runs-on: ubuntu-latest
    container: qmkfm/qmk_cli
    strategy:
      fail-fast: false
      matrix:
        keyboard: [lily58]
        conv: [elite_pi]
        split: ['']
        pet: ['', LUNA, FELIX]
        branch: ['']
        include:
        - keyboard: crkbd
          conv: elite_pi
          split: ''
        - keyboard: lily58
          conv: elite_pi
          split: ''
          repo: splitkb/qmk_firmware
          branch: elora

    steps:
    - name: Configure safe directory
      run : git config --global --add safe.directory '*'

    - name: Checkout QMK
      if: ${{ !matrix.repo }}
      uses: actions/checkout@v4.0.0
      with:
        repository: qmk/qmk_firmware
        ref: ${{ matrix.branch }}
        submodules: true

    - name: Checkout QMK
      if: ${{ matrix.repo }}
      uses: actions/checkout@v4.0.0
      with:
        repository: ${{ matrix.repo }}
        ref: ${{ matrix.branch }}
        submodules: true

    - name: Checkout userspace
      uses: actions/checkout@v4.0.0
      with:
        path: users/${{ github.actor }}
        persist-credentials: false

    - name: Compile
      env:
        split: ${{ matrix.split }}
      working-directory: users/${{ github.actor }}/keymaps/
      run: >
        qmk compile -j $(nproc) ${{ matrix.keyboard }}.json
        -e CONVERT_TO=${{ matrix.conv }} -e OLED=${{ matrix.pet }} -e SPLIT=${{ matrix.split }} -e TARGET=${{ matrix.keyboard }}${split:+_$split}

    - name: Setup variables
      env:
        conv_suffix: $([ ${{ matrix.conv }} ] && printf "_${{ matrix.conv }}")
        split_suffix: $([ ${{ matrix.split }} ] && printf "_${{ matrix.split }}")
        pet_suffix: $([ ${{ matrix.pet }} ] && printf "_${{ matrix.pet }}")
        repo_suffix: $([ ${{ matrix.repo }} ] && printf "_${{ matrix.repo }}")        
        branch_suffix: $([ ${{ matrix.branch }} ] && printf "_${{ matrix.branch }}")        
      run: |
        echo "file_suffix=${{ env.split_suffix }}${{ env.pet_suffix }}${{ env.branch_suffix }}" >> $GITHUB_ENV
        echo "archive_name=${{ matrix.keyboard }}${{ env.split_suffix }}${{ env.pet_suffix }}${{ env.branch_suffix }}" >> $GITHUB_ENV

    - name: Rename uf2
      if: ${{ matrix.conv != '' }}
      continue-on-error: true
      run: for file in *.uf2; do mv -v $file ${file%.*}${{ env.file_suffix }}.uf2; done

    - name: Archive firmware
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        retention-days: 60
        name: ${{ env.archive_name }}
        path: |
          *.hex
          *.bin
          *.uf2

  release:
    needs: build
    uses: ergotu/.github/utils/publish-artifact.yaml@main
    with:
      release_name: Firmware
      release_tag: latest

  purge:
    uses: ergotu/.github/utils/purge-workflow.yaml@main
    with:
      purge-age: 5
      delete-all-completed: false
      delete-all-incomplete: false